import time

from os.path import isfile
from PyQt5.QtCore import QObject, pyqtSlot

from instr.instrumentfactory import SemiconductorAnalyzerFactory, mock_enabled
from measureresult import MeasureResult


class InstrumentController(QObject):
    states = {
        i * 0.25: i for i in range(64)
    }

    main_states = [0, 1, 2, 4, 8, 16, 32, 63]

    def __init__(self, parent=None):
        super().__init__(parent=parent)

        self.requiredInstruments = {
            'Анализатор п/п приборов': SemiconductorAnalyzerFactory('GPIB1::10::INSTR'),
        }

        self.deviceParams = {
            'Варикап': {
                'F': [1.15, 1.35, 1.75, 1.92, 2.25, 2.54, 2.7, 3, 3.47, 3.86, 4.25],
                'mul': 2,
                'P1': 15,
                'P2': 21,
                'Istat': [None, None, None],
                'Idyn': [None, None, None]
            },
        }

        if isfile('./params.ini'):
            import ast
            with open('./params.ini', 'rt', encoding='utf-8') as f:
                raw = ''.join(f.readlines())
                self.deviceParams = ast.literal_eval(raw)

        self.secondaryParams = {
            'Pin': -10,
            'F1': 4,
            'F2': 8,
            'kp': 0,
            'Fborder1': 4,
            'Fborder2': 8
        }

        self.sweep_points = 201
        self.cal_set = '-20db_pyatkin_6G'

        self._instruments = dict()
        self.found = False
        self.present = False
        self.hasResult = False
        self.only_main_states = False

        self.result = MeasureResult()

        self._freqs = list()

    def __str__(self):
        return f'{self._instruments}'

    def connect(self, addrs):
        print(f'searching for {addrs}')
        for k, v in addrs.items():
            self.requiredInstruments[k].addr = v
        self.found = self._find()

    def _find(self):
        self._instruments = {
            k: v.find() for k, v in self.requiredInstruments.items()
        }
        return all(self._instruments.values())

    def check(self, params):
        print(f'call check with {params}')
        device, secondary = params
        self.present = self._check(device, secondary)
        print('sample pass')

    def _check(self, device, secondary):
        print(f'launch check with {self.deviceParams[device]} {self.secondaryParams}')
        return self._runCheck(self.deviceParams[device], self.secondaryParams)

    def _runCheck(self, param, secondary):
        print(f'run check with {param}, {secondary}')
        return True

    def measure(self, params):
        print(f'call measure with {params}')
        device, _ = params
        self.result.raw_data = self._measure(device), self.secondaryParams
        self.hasResult = bool(self.result)

    def _measure(self, device):
        param = self.deviceParams[device]
        secondary = self.secondaryParams
        print(f'launch measure with {param} {secondary}')

        self._clear()
        self._init()

        return self._measure_s_params()

    def _clear(self):
        pass

    def _init(self):
        sda = self._instruments['Анализатор п/п приборов']

        res = sda.query('*IDN?')
        print(res)

    def _measure_s_params(self):
        sda = self._instruments['Анализатор п/п приборов']

        i = 0
        j = 0
        nop1 = 21
        nop2 = 1
        data = []
        value ="Vg (V), Cp (pF), C_st, G (uS), G_st, OSC (mV), Osc_st, DC (V), Dc_st, Time (s)"
        fname = "ex15.txt"
        title = "CV Sweep Measurement Result"
        msg = "No error."
        err = "0"
        freq = 1000000
        ref_cp = 0
        ref_g = 0
        osc_level = 0.03
        vg1 = 0
        vg2 = 10
        hold = 0
        delay = 0
        s_delay = 0
        _range = 0
        rep = nop1
        sc = [0] * nop1
        md = [0] * nop1 * 2
        st = [0] * nop1 * 2
        mon = [0] * nop1 * 2
        st_mon = [0] * nop1 * 2
        tm = [0] * nop1
        ret_val = ''

        # 1 выбор режима измерения CV-sweep
        #
        # channel setup:
        # 2 выбор канала на котором висит CMUH -- 5 канал
        # 3 выбор канала на котором висит GNDU -- 0 канал(?)
        # 4 GNDU mode -- common
        # 5 CMUH v name = vbias
        # 6 CMUH function - var1
        # CMUH - no name & mode
        #
        # measurement stup
        # 7 measurement mode -- CpG (code 100)
        # 8 cname = C, g name = G
        # 9 direction -- single
        # 10 start, stop -- 0 .. 10
        # 11 step 100mV, step count 101
        # 12 display setup -

        # sda.send("FMT 1,0")    # enable output data format
        # sda.send("TSC 1")   # setup timestamps
        sda.send("DV 5,0,0,0.1,0")   # forces DC voltage and current limits onto the channel

        ch = 5   # slot number in which MFCMU device is set (B1520A)
        sda.send(f"CN {ch}")   # select MFCMU slot
        sda.send(f"SSP {ch},4")   # select SCUU path via MFCMU
        sda.send(f"SSL {ch},4")   # SCUU connection status indicator
        sda.send("ACT 0")   # time averaging setting
        # sda.send("WTDCV 10,1")   # measure timers
        sda.send("WTDCV 0,0,0")   # measure timers

        u_start = 0
        u_end = 10
        u_step = 101
        sda.send(f"WDCV {ch},1,{u_start},{u_end},{u_step}")   # measure sweep settings: WDCV chnum,mode,start,stop,step -- mode == 1
        freq = 1_000_000
        sda.send(f'FC {freq}')   # freq settings
        u_ac = 0.03
        sda.send(f'ACV {u_ac}')   # freq settings
        # sda.send(f'WMDCV 2')   # enable abort function
        sda.send(f"MM 18,{ch}")   # FC(+), ACV(not used), WDCV(+), WMDCV(+), WTDCV(+)

        sda.send("IMP 100")   # select parameter measurement Cp-G == 100
        sda.send("LMN 0")   # enable data output for CV-sweep(MM 18) and C spot measurement (MM 17) ac/dc monitor values
        _range = 0
        sda.send(f"RC {ch},{_range}")   # impedance ranging (?)

        time.sleep(2)
        sda.send("TSR")   # clear timer count
        sda.send("FMT 1,0")   # enable output data format (see table 4-8 on page 4-16) [,1/0] = toggle show sweep point
        sda.send("XE")   # trigger measure
        print('trigger measure')

        time.sleep(30)
        # print('>>> opc?')
        # rdy = sda.query('*OPC?')
        # print('OPC:', rdy)

        print('ask NUB?')
        res = sda.query('NUB?')   # get number of points in the data output buffer
        print('NUB: points waiting:', res)
        time.sleep(5)

        res = sda._inst.read()   # force read data from buffer
        # https://qcodes.github.io/Qcodes/examples/driver_examples/Qcodes%20example%20with%20Keysight%20B1500%20Parameter%20Analyzer.html
        # 5 chan - NET+5.25600E-02,NEC+1.46373E-09,NEY-2.56441E-05,NEV+00.0007E-03,NEV+0.00674E+00,WEV+000.000E+00,NET+2.87550E-01,NEC-8.40749E-11,NEY-4.55479E-06,NEV+00.0002E-03,NEV+0.50602E+00,WEV+000.500E+00,NET+5.86190E-01,NEC+4.89616E-10,NEY+2.22992E-06,NEV+00.0008E-03,NEV+1.00644E+00,WEV+001.000E+00,NET+7.23700E-01,NEC-7.75500E-10,NEY-4.04134E-06,NEV+00.0023E-03,NEV+1.50706E+00,WEV+001.500E+00,NET+8.61820E-01,NEC+8.18367E-10,NEY+7.85093E-07,NEV+00.0007E-03,NEV+2.00756E+00,WEV+002.000E+00,NET+1.15919E+00,NEC-2.23096E-11,NEY+2.45527E-06,NEV+00.0006E-03,NEV+2.50768E+00,WEV+002.500E+00,NET+1.29663E+00,NEC+9.87095E-10,NEY-2.47513E-07,NEV+00.0013E-03,NEV+3.00716E+00,WEV+003.000E+00,NET+1.61019E+00,NEC+5.99652E-09,NEY+3.06692E-05,NEV+00.0007E-03,NEV+3.50795E+00,WEV+003.500E+00,NET+1.82818E+00,NEC+1.52073E-09,NEY+6.52340E-06,NEV+00.0016E-03,NEV+4.00837E+00,WEV+004.000E+00,NET+1.96565E+00,NEC+3.39565E-09,NEY-2.62115E-05,NEV+00.0006E-03,NEV+4.50830E+00,WEV+004.500E+00,NET+2.10267E+00,NEC-7.58325E-10,NEY+1.37186E-05,NEV+00.0002E-03,NEV+5.00864E+00,WEV+005.000E+00,NET+2.24135E+00,NEC-4.48145E-10,NEY-1.91574E-05,NEV+00.0012E-03,NEV+5.50842E+00,WEV+005.500E+00,NET+2.37881E+00,NEC-1.89574E-09,NEY+2.54290E-05,NEV+00.0008E-03,NEV+6.00883E+00,WEV+006.000E+00,NET+2.51680E+00,NEC+2.24535E-09,NEY+1.07565E-05,NEV+00.0015E-03,NEV+6.50913E+00,WEV+006.500E+00,NET+2.73518E+00,NEC+2.59057E-09,NEY+3.69362E-05,NEV+00.0004E-03,NEV+7.00953E+00,WEV+007.000E+00,NET+2.87272E+00,NEC-5.18365E-09,NEY+3.15577E-05,NEV+00.0005E-03,NEV+7.51013E+00,WEV+007.500E+00,NET+3.00966E+00,NEC-3.20750E-09,NEY-6.50247E-05,NEV+00.0001E-03,NEV+8.00962E+00,WEV+008.000E+00,NET+3.14822E+00,NEC-5.86164E-09,NEY-9.81667E-06,NEV+00.0005E-03,NEV+08.5099E+00,WEV+008.500E+00,NET+3.44520E+00,NEC-7.77032E-09,NEY-2.17607E-06,NEV+00.0005E-03,NEV+09.0103E+00,WEV+009.000E+00,NET+3.74320E+00,NEC-1.45949E-09,NEY+5.10958E-06,NEV+00.0008E-03,NEV+09.5108E+00,WEV+009.500E+00,NET+4.15281E+00,NEC+2.52192E-09,NEY+2.62095E-05,NEV+00.0013E-03,NEV+10.0112E+00,EEV+010.000E+00
        # 4 chan - NDT+7.82300E-02,NDI-0.00740E-09,WDV+00.0000E+00,NDT+1.54120E-01,NDI-0.27300E-09,WDV+00.5000E+00,NDT+2.29110E-01,NDI-0.08010E-09,WDV+01.0000E+00,NDT+3.04980E-01,NDI+0.20090E-09,WDV+01.5000E+00,NDT+3.79990E-01,NDI+0.15340E-09,WDV+02.0000E+00,NDT+4.55860E-01,NDI-0.15975E-09,WDV+02.5000E+00,NDT+5.30870E-01,NDI-0.18620E-09,WDV+03.0000E+00,NDT+6.06740E-01,NDI+0.16720E-09,WDV+03.5000E+00,NDT+6.81730E-01,NDI+0.19895E-09,WDV+04.0000E+00,NDT+7.57600E-01,NDI-0.06055E-09,WDV+04.5000E+00,NDT+8.33500E-01,NDI-0.31430E-09,WDV+05.0000E+00,NDT+9.09730E-01,NDI-0.14570E-09,WDV+05.5000E+00,NDT+9.85600E-01,NDI+0.16985E-09,WDV+06.0000E+00,NDT+1.06064E+00,NDI+0.16150E-09,WDV+06.5000E+00,NDT+1.13676E+00,NDI-0.17355E-09,WDV+07.0000E+00,NDT+1.21177E+00,NDI-0.20270E-09,WDV+07.5000E+00,NDT+1.28765E+00,NDI+0.08575E-09,WDV+08.0000E+00,NDT+1.36377E+00,NDI+0.31565E-09,WDV+08.5000E+00,NDT+1.44044E+00,NDI+0.15410E-09,WDV+09.0000E+00,NDT+1.51655E+00,NDI-0.17700E-09,WDV+09.5000E+00,NDT+1.59157E+00,NDI-0.20090E-09,EDV+10.0000E+00
        # 0 chan - WDV+00.0000E+00,WDV+00.5000E+00,WDV+01.0000E+00,WDV+01.5000E+00,WDV+02.0000E+00,WDV+02.5000E+00,WDV+03.0000E+00,WDV+03.5000E+00,WDV+04.0000E+00,WDV+04.5000E+00,WDV+05.0000E+00,WDV+05.5000E+00,WDV+06.0000E+00,WDV+06.5000E+00,WDV+07.0000E+00,WDV+07.5000E+00,WDV+08.0000E+00,WDV+08.5000E+00,WDV+09.0000E+00,WDV+09.5000E+00,EDV+10.0000E+00

        # 5 chan 101 point - NET+4.44980E-01,NEC-1.40372E-08,NEY+4.85568E-05,NEV+00.0011E-03,NEV+0.00641E+00,WEV+000.000E+00,NET+6.63680E-01,NEC-1.79893E-08,NEY-1.07446E-04,NEV+00.0014E-03,NEV+0.10594E+00,WEV+000.100E+00,NET+8.81680E-01,NEC+2.75758E-08,NEY-5.47416E-04,NEV+00.0004E-03,NEV+0.20579E+00,WEV+000.200E+00,NET+1.01898E+00,NEC-4.10096E-08,NEY+3.62855E-04,NEV+00.0003E-03,NEV+0.30640E+00,WEV+000.300E+00,NET+1.15717E+00,NEC-3.55268E-08,NEY-2.54590E-04,NEV+00.0002E-03,NEV+0.40609E+00,WEV+000.400E+00,NET+1.37468E+00,NEC+5.17926E-08,NEY-2.27006E-05,NEV+00.0002E-03,NEV+0.50583E+00,WEV+000.500E+00,NET+1.51198E+00,NEC+2.39792E-08,NEY-3.86369E-05,NEV+00.0006E-03,NEV+0.60636E+00,WEV+000.600E+00,NET+1.64971E+00,NEC-6.48061E-09,NEY+1.36749E-04,NEV+00.0009E-03,NEV+0.70608E+00,WEV+000.700E+00,NET+1.78611E+00,NEC+3.36610E-08,NEY+9.77253E-05,NEV+00.0004E-03,NEV+0.80572E+00,WEV+000.800E+00,NET+2.00469E+00,NEC-2.81301E-09,NEY-1.78662E-05,NEV+00.0012E-03,NEV+0.90637E+00,WEV+000.900E+00,NET+2.22268E+00,NEC-2.71843E-08,NEY-1.33484E-05,NEV+00.0011E-03,NEV+1.00620E+00,WEV+001.000E+00,NET+2.35997E+00,NEC+1.61861E-08,NEY-2.21530E-05,NEV+00.0012E-03,NEV+1.10596E+00,WEV+001.100E+00,NET+2.49725E+00,NEC-2.99871E-08,NEY+2.96199E-04,NEV+00.0001E-03,NEV+1.20668E+00,WEV+001.200E+00,NET+2.81069E+00,NEC-8.17026E-10,NEY-1.22610E-05,NEV+00.0005E-03,NEV+1.30639E+00,WEV+001.300E+00,NET+2.94902E+00,NEC+3.04365E-09,NEY+1.37714E-05,NEV+00.0005E-03,NEV+1.40710E+00,WEV+001.400E+00,NET+3.08726E+00,NEC+9.82201E-10,NEY-8.82929E-06,NEV+00.0012E-03,NEV+1.50666E+00,WEV+001.500E+00,NET+3.30568E+00,NEC-1.46228E-09,NEY+1.10380E-05,NEV+00.0010E-03,NEV+1.60636E+00,WEV+001.600E+00,NET+3.52368E+00,NEC+2.10710E-09,NEY-1.46653E-05,NEV+00.0003E-03,NEV+1.70709E+00,WEV+001.700E+00,NET+3.66090E+00,NEC+1.72113E-09,NEY-2.04220E-05,NEV+00.0008E-03,NEV+1.80686E+00,WEV+001.800E+00,NET+3.87968E+00,NEC+9.86419E-10,NEY+4.74319E-06,NEV+00.0009E-03,NEV+1.90649E+00,WEV+001.900E+00,NET+4.11331E+00,NEC-2.60046E-08,NEY+1.29814E-04,NEV+00.0003E-03,NEV+2.00728E+00,WEV+002.000E+00,NET+4.33168E+00,NEC-2.75010E-10,NEY-2.32477E-05,NEV+00.0009E-03,NEV+2.10665E+00,WEV+002.100E+00,NET+4.72642E+00,NEC+1.94473E-09,NEY+2.85828E-06,NEV+00.0010E-03,NEV+2.20629E+00,WEV+002.200E+00,NET+4.86415E+00,NEC-5.27967E-09,NEY+4.68533E-06,NEV+00.0006E-03,NEV+2.30702E+00,WEV+002.300E+00,NET+5.00191E+00,NEC+4.25751E-09,NEY-1.52969E-05,NEV+00.0007E-03,NEV+2.40672E+00,WEV+002.400E+00,NET+5.22069E+00,NEC+6.55633E-11,NEY-1.44574E-05,NEV+00.0004E-03,NEV+2.50754E+00,WEV+002.500E+00,NET+5.43868E+00,NEC-2.99925E-09,NEY+2.00984E-06,NEV+00.0008E-03,NEV+2.60716E+00,WEV+002.600E+00,NET+5.65668E+00,NEC+1.54440E-09,NEY-1.31702E-05,NEV+00.0012E-03,NEV+2.70678E+00,WEV+002.700E+00,NET+5.98630E+00,NEC-4.97094E-09,NEY+5.32731E-06,NEV+00.0010E-03,NEV+2.80756E+00,WEV+002.800E+00,NET+6.20469E+00,NEC-1.53433E-09,NEY-1.72961E-05,NEV+00.0013E-03,NEV+2.90712E+00,WEV+002.900E+00,NET+6.42269E+00,NEC+1.64431E-09,NEY+1.21838E-05,NEV+00.0014E-03,NEV+3.00688E+00,WEV+003.000E+00,NET+6.65636E+00,NEC+5.06219E-10,NEY-4.10639E-06,NEV+00.0009E-03,NEV+3.10756E+00,WEV+003.100E+00,NET+6.97071E+00,NEC-1.56986E-09,NEY+1.27966E-05,NEV+00.0010E-03,NEV+3.20733E+00,WEV+003.200E+00,NET+7.26870E+00,NEC-6.55365E-09,NEY-3.33702E-05,NEV+00.0001E-03,NEV+3.30710E+00,WEV+003.300E+00,NET+7.40593E+00,NEC-4.62669E-09,NEY-4.10494E-05,NEV+00.0004E-03,NEV+3.40784E+00,WEV+003.400E+00,NET+7.62369E+00,NEC+7.68998E-10,NEY-1.43015E-05,NEV+00.0014E-03,NEV+3.50754E+00,WEV+003.500E+00,NET+7.84170E+00,NEC+8.27239E-10,NEY-1.31026E-05,NEV+00.0009E-03,NEV+3.60717E+00,WEV+003.600E+00,NET+8.33169E+00,NEC+3.52739E-09,NEY-2.42465E-05,NEV+00.0005E-03,NEV+3.70786E+00,WEV+003.700E+00,NET+8.56535E+00,NEC+1.31189E-09,NEY+6.38515E-06,NEV+00.0004E-03,NEV+3.80758E+00,WEV+003.800E+00,NET+8.79932E+00,NEC+2.63083E-09,NEY+1.53300E-05,NEV+00.0009E-03,NEV+3.90830E+00,WEV+003.900E+00,NET+9.01769E+00,NEC+8.31551E-09,NEY-4.16924E-05,NEV+00.0006E-03,NEV+4.00800E+00,WEV+004.000E+00,NET+9.23569E+00,NEC+1.36889E-09,NEY-1.06758E-05,NEV+00.0021E-03,NEV+4.10776E+00,WEV+004.100E+00,NET+9.64671E+00,NEC+4.32779E-09,NEY-1.24889E-05,NEV+00.0008E-03,NEV+4.20792E+00,WEV+004.200E+00,NET+9.97630E+00,NEC+1.32815E-09,NEY-9.05594E-06,NEV+00.0009E-03,NEV+4.30764E+00,WEV+004.300E+00,NET+1.01141E+01,NEC-3.06280E-09,NEY+1.14953E-06,NEV+00.0006E-03,NEV+4.40743E+00,WEV+004.400E+00,NET+1.02519E+01,NEC-8.16220E-10,NEY-3.13740E-05,NEV+00.0004E-03,NEV+4.50804E+00,WEV+004.500E+00,NET+1.04863E+01,NEC+9.67766E-10,NEY-7.27523E-06,NEV+00.0005E-03,NEV+4.60776E+00,WEV+004.600E+00,NET+1.07847E+01,NEC-7.80033E-10,NEY+8.20596E-06,NEV+00.0004E-03,NEV+4.70744E+00,WEV+004.700E+00,NET+1.09221E+01,NEC+4.85853E-10,NEY-4.52117E-06,NEV+00.0009E-03,NEV+4.80821E+00,WEV+004.800E+00,NET+1.12197E+01,NEC+6.38849E-11,NEY-1.03020E-05,NEV+00.0007E-03,NEV+4.90784E+00,WEV+004.900E+00,NET+1.13569E+01,NEC+1.05034E-09,NEY+1.86105E-06,NEV+00.0008E-03,NEV+5.00843E+00,WEV+005.000E+00,NET+1.16707E+01,NEC+1.42247E-10,NEY+5.79566E-05,NEV+00.0006E-03,NEV+5.10818E+00,WEV+005.100E+00,NET+1.18897E+01,NEC+2.55656E-09,NEY+5.34894E-06,NEV+00.0014E-03,NEV+5.20803E+00,WEV+005.200E+00,NET+1.21077E+01,NEC+1.36094E-09,NEY+7.06261E-06,NEV+00.0009E-03,NEV+5.30864E+00,WEV+005.300E+00,NET+1.23257E+01,NEC+1.38580E-09,NEY-1.45910E-05,NEV+00.0005E-03,NEV+5.40840E+00,WEV+005.400E+00,NET+1.24629E+01,NEC-2.25944E-09,NEY+2.97859E-05,NEV+00.0004E-03,NEV+5.50807E+00,WEV+005.500E+00,NET+1.26817E+01,NEC+5.78873E-11,NEY-8.71348E-06,NEV+00.0011E-03,NEV+5.60891E+00,WEV+005.600E+00,NET+1.29797E+01,NEC-1.44136E-09,NEY+2.80630E-06,NEV+00.0015E-03,NEV+5.70844E+00,WEV+005.700E+00,NET+1.31170E+01,NEC-3.55185E-09,NEY-2.19310E-05,NEV+00.0004E-03,NEV+5.80808E+00,WEV+005.800E+00,NET+1.32551E+01,NEC+1.41478E-09,NEY+3.11792E-05,NEV+00.0004E-03,NEV+5.90874E+00,WEV+005.900E+00,NET+1.34737E+01,NEC+1.76551E-09,NEY-1.89303E-05,NEV+00.0010E-03,NEV+6.00855E+00,WEV+006.000E+00,NET+1.36110E+01,NEC+2.41908E-09,NEY-4.13843E-06,NEV+00.0007E-03,NEV+6.10824E+00,WEV+006.100E+00,NET+1.38453E+01,NEC+1.03801E-09,NEY+4.62146E-06,NEV+00.0013E-03,NEV+6.20872E+00,WEV+006.200E+00,NET+1.39829E+01,NEC+1.23088E-09,NEY+5.86966E-06,NEV+00.0006E-03,NEV+6.30832E+00,WEV+006.300E+00,NET+1.42163E+01,NEC-1.22443E-09,NEY-9.63228E-06,NEV+00.0010E-03,NEV+6.40902E+00,WEV+006.400E+00,NET+1.43540E+01,NEC+1.90267E-09,NEY+1.17384E-05,NEV+00.0013E-03,NEV+6.50878E+00,WEV+006.500E+00,NET+1.45883E+01,NEC-9.56304E-10,NEY+1.82375E-06,NEV+00.0013E-03,NEV+6.60849E+00,WEV+006.600E+00,NET+1.47260E+01,NEC-3.24255E-10,NEY+2.45582E-06,NEV+00.0018E-03,NEV+6.70917E+00,WEV+006.700E+00,NET+1.48639E+01,NEC+1.02313E-09,NEY+7.45123E-06,NEV+00.0007E-03,NEV+6.80888E+00,WEV+006.800E+00,NET+1.50022E+01,NEC-5.09445E-10,NEY-3.75972E-06,NEV+00.0012E-03,NEV+6.90850E+00,WEV+006.900E+00,NET+1.53007E+01,NEC+6.98262E-10,NEY+1.16722E-06,NEV+00.0006E-03,NEV+7.00920E+00,WEV+007.000E+00,NET+1.54379E+01,NEC-6.82474E-10,NEY-7.41419E-06,NEV+00.0005E-03,NEV+7.10902E+00,WEV+007.100E+00,NET+1.55750E+01,NEC-7.79062E-10,NEY+8.67222E-06,NEV+00.0006E-03,NEV+7.20872E+00,WEV+007.200E+00,NET+1.57124E+01,NEC+5.30473E-10,NEY-6.87238E-06,NEV+00.0009E-03,NEV+7.30936E+00,WEV+007.300E+00,NET+1.58504E+01,NEC-2.97056E-10,NEY+2.72748E-06,NEV+00.0010E-03,NEV+7.40917E+00,WEV+007.400E+00,NET+1.59875E+01,NEC+4.34229E-10,NEY+6.72449E-06,NEV+00.0008E-03,NEV+7.50984E+00,WEV+007.500E+00,NET+1.62203E+01,NEC+1.19160E-09,NEY+1.09908E-06,NEV+00.0017E-03,NEV+7.60951E+00,WEV+007.600E+00,NET+1.63580E+01,NEC-1.96244E-09,NEY+1.71867E-05,NEV+00.0002E-03,NEV+7.70924E+00,WEV+007.700E+00,NET+1.65757E+01,NEC+5.04570E-09,NEY-9.35665E-05,NEV+00.0001E-03,NEV+7.80996E+00,WEV+007.800E+00,NET+1.67130E+01,NEC+1.61080E-10,NEY-3.23260E-05,NEV+00.0007E-03,NEV+7.90973E+00,WEV+007.900E+00,NET+1.68512E+01,NEC+4.89362E-09,NEY-9.88743E-06,NEV+00.0015E-03,NEV+8.00931E+00,WEV+008.000E+00,NET+1.70857E+01,NEC+5.57531E-10,NEY+3.17029E-06,NEV+00.0010E-03,NEV+08.1098E+00,WEV+008.100E+00,NET+1.72229E+01,NEC-5.05604E-10,NEY-4.23019E-06,NEV+00.0011E-03,NEV+08.2096E+00,WEV+008.200E+00,NET+1.74573E+01,NEC+8.66457E-10,NEY+2.50753E-06,NEV+00.0017E-03,NEV+08.3092E+00,WEV+008.300E+00,NET+1.75949E+01,NEC+2.43701E-09,NEY-2.00205E-06,NEV+00.0010E-03,NEV+08.4099E+00,WEV+008.400E+00,NET+1.77326E+01,NEC+3.20789E-09,NEY-2.77728E-05,NEV+00.0005E-03,NEV+08.5095E+00,WEV+008.500E+00,NET+1.79653E+01,NEC-1.21233E-10,NEY+6.19801E-06,NEV+00.0012E-03,NEV+08.6093E+00,WEV+008.600E+00,NET+1.81993E+01,NEC-5.49398E-10,NEY+7.83644E-06,NEV+00.0010E-03,NEV+08.7098E+00,WEV+008.700E+00,NET+1.83371E+01,NEC+2.09897E-09,NEY+6.67853E-06,NEV+00.0011E-03,NEV+08.8095E+00,WEV+008.800E+00,NET+1.85557E+01,NEC+3.17113E-09,NEY+9.72346E-06,NEV+00.0013E-03,NEV+08.9102E+00,WEV+008.900E+00,NET+1.86931E+01,NEC-5.46754E-10,NEY+4.93728E-05,NEV+00.0003E-03,NEV+09.0099E+00,WEV+009.000E+00,NET+1.89117E+01,NEC-2.45694E-09,NEY+1.74590E-05,NEV+00.0002E-03,NEV+09.1097E+00,WEV+009.100E+00,NET+1.91297E+01,NEC+1.89198E-09,NEY-4.66519E-05,NEV+00.0005E-03,NEV+09.2101E+00,WEV+009.200E+00,NET+1.93467E+01,NEC-2.00439E-09,NEY+1.39188E-05,NEV+00.0005E-03,NEV+09.3101E+00,WEV+009.300E+00,NET+1.96763E+01,NEC+1.61288E-09,NEY-7.12196E-06,NEV+00.0012E-03,NEV+09.4098E+00,WEV+009.400E+00,NET+1.98142E+01,NEC-1.66074E-09,NEY+6.97192E-07,NEV+00.0008E-03,NEV+09.5105E+00,WEV+009.500E+00,NET+2.00317E+01,NEC+3.53165E-09,NEY+1.55101E-05,NEV+00.0006E-03,NEV+09.6102E+00,WEV+009.600E+00,NET+2.01690E+01,NEC-4.29191E-09,NEY-4.68570E-05,NEV+00.0003E-03,NEV+09.7101E+00,WEV+009.700E+00,NET+2.04827E+01,NEC+2.45737E-10,NEY-1.28779E-06,NEV+00.0014E-03,NEV+09.8106E+00,WEV+009.800E+00,NET+2.06210E+01,NEC+7.13861E-11,NEY+2.44816E-06,NEV+00.0019E-03,NEV+09.9103E+00,WEV+009.900E+00,NET+2.08397E+01,NEC+1.57821E-09,NEY-2.02563E-06,NEV+00.0006E-03,NEV+10.0110E+00,EEV+010.000E+00

        print('>>> result', res)
        return res

    def pow_sweep(self):
        print('pow sweep')
        return [4, 5, 6], [4, 5, 6]

    @pyqtSlot(dict)
    def on_secondary_changed(self, params):
        self.secondaryParams = params

    @property
    def status(self):
        return [i.status for i in self._instruments.values()]


def parse_float_list(lst):
    return [float(x) for x in lst.split(',')]
